---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.18.0
  name: agents.runtime.agentic-layer.ai
spec:
  group: runtime.agentic-layer.ai
  names:
    kind: Agent
    listKind: AgentList
    plural: agents
    singular: agent
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Agent is the Schema for the agents API.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: AgentSpec defines the desired state of Agent.
            properties:
              description:
                description: |-
                  Description provides a description of the agent.
                  This is passed as AGENT_DESCRIPTION environment variable to the agent.
                type: string
              env:
                description: |-
                  Env defines additional environment variables to be injected into the agent container.
                  These are take precedence over operator-managed environment variables.
                items:
                  description: EnvVar represents an environment variable present in
                    a Container.
                  properties:
                    name:
                      description: |-
                        Name of the environment variable.
                        May consist of any printable ASCII characters except '='.
                      type: string
                    value:
                      description: |-
                        Variable references $(VAR_NAME) are expanded
                        using the previously defined environment variables in the container and
                        any service environment variables. If a variable cannot be resolved,
                        the reference in the input string will be unchanged. Double $$ are reduced
                        to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e.
                        "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)".
                        Escaped references will never be expanded, regardless of whether the variable
                        exists or not.
                        Defaults to "".
                      type: string
                    valueFrom:
                      description: Source for the environment variable's value. Cannot
                        be used if value is not empty.
                      properties:
                        configMapKeyRef:
                          description: Selects a key of a ConfigMap.
                          properties:
                            key:
                              description: The key to select.
                              type: string
                            name:
                              default: ""
                              description: |-
                                Name of the referent.
                                This field is effectively required, but due to backwards compatibility is
                                allowed to be empty. Instances of this type with an empty value here are
                                almost certainly wrong.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              type: string
                            optional:
                              description: Specify whether the ConfigMap or its key
                                must be defined
                              type: boolean
                          required:
                          - key
                          type: object
                          x-kubernetes-map-type: atomic
                        fieldRef:
                          description: |-
                            Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`,
                            spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.
                          properties:
                            apiVersion:
                              description: Version of the schema the FieldPath is
                                written in terms of, defaults to "v1".
                              type: string
                            fieldPath:
                              description: Path of the field to select in the specified
                                API version.
                              type: string
                          required:
                          - fieldPath
                          type: object
                          x-kubernetes-map-type: atomic
                        fileKeyRef:
                          description: |-
                            FileKeyRef selects a key of the env file.
                            Requires the EnvFiles feature gate to be enabled.
                          properties:
                            key:
                              description: |-
                                The key within the env file. An invalid key will prevent the pod from starting.
                                The keys defined within a source may consist of any printable ASCII characters except '='.
                                During Alpha stage of the EnvFiles feature gate, the key size is limited to 128 characters.
                              type: string
                            optional:
                              default: false
                              description: |-
                                Specify whether the file or its key must be defined. If the file or key
                                does not exist, then the env var is not published.
                                If optional is set to true and the specified key does not exist,
                                the environment variable will not be set in the Pod's containers.

                                If optional is set to false and the specified key does not exist,
                                an error will be returned during Pod creation.
                              type: boolean
                            path:
                              description: |-
                                The path within the volume from which to select the file.
                                Must be relative and may not contain the '..' path or start with '..'.
                              type: string
                            volumeName:
                              description: The name of the volume mount containing
                                the env file.
                              type: string
                          required:
                          - key
                          - path
                          - volumeName
                          type: object
                          x-kubernetes-map-type: atomic
                        resourceFieldRef:
                          description: |-
                            Selects a resource of the container: only resources limits and requests
                            (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.
                          properties:
                            containerName:
                              description: 'Container name: required for volumes,
                                optional for env vars'
                              type: string
                            divisor:
                              anyOf:
                              - type: integer
                              - type: string
                              description: Specifies the output format of the exposed
                                resources, defaults to "1"
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            resource:
                              description: 'Required: resource to select'
                              type: string
                          required:
                          - resource
                          type: object
                          x-kubernetes-map-type: atomic
                        secretKeyRef:
                          description: Selects a key of a secret in the pod's namespace
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              default: ""
                              description: |-
                                Name of the referent.
                                This field is effectively required, but due to backwards compatibility is
                                allowed to be empty. Instances of this type with an empty value here are
                                almost certainly wrong.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                          x-kubernetes-map-type: atomic
                      type: object
                  required:
                  - name
                  type: object
                type: array
              envFrom:
                description: EnvFrom defines sources to populate environment variables
                  from.
                items:
                  description: EnvFromSource represents the source of a set of ConfigMaps
                    or Secrets
                  properties:
                    configMapRef:
                      description: The ConfigMap to select from
                      properties:
                        name:
                          default: ""
                          description: |-
                            Name of the referent.
                            This field is effectively required, but due to backwards compatibility is
                            allowed to be empty. Instances of this type with an empty value here are
                            almost certainly wrong.
                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          type: string
                        optional:
                          description: Specify whether the ConfigMap must be defined
                          type: boolean
                      type: object
                      x-kubernetes-map-type: atomic
                    prefix:
                      description: |-
                        Optional text to prepend to the name of each environment variable.
                        May consist of any printable ASCII characters except '='.
                      type: string
                    secretRef:
                      description: The Secret to select from
                      properties:
                        name:
                          default: ""
                          description: |-
                            Name of the referent.
                            This field is effectively required, but due to backwards compatibility is
                            allowed to be empty. Instances of this type with an empty value here are
                            almost certainly wrong.
                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          type: string
                        optional:
                          description: Specify whether the Secret must be defined
                          type: boolean
                      type: object
                      x-kubernetes-map-type: atomic
                  type: object
                type: array
              exposed:
                description: Exposed indicates whether this agent should be exposed
                  via the AgentGateway
                type: boolean
              framework:
                description: Framework defines the supported agent frameworks
                enum:
                - google-adk
                - custom
                type: string
              image:
                description: |-
                  Image is the Docker image and tag to use for the microservice deployment.
                  When not specified, the operator will use a framework-specific template image.
                type: string
              instruction:
                description: |-
                  Instruction defines the system instruction/prompt for the agent when using template images.
                  This is passed as AGENT_INSTRUCTION environment variable to the agent.
                type: string
              model:
                description: |-
                  Model specifies the language model to use for the agent.
                  This is passed as AGENT_MODEL environment variable to the agent.
                  Defaults to the agents default model if not specified.
                type: string
              protocols:
                description: Protocols defines the protocols supported by the agent
                items:
                  description: AgentProtocol defines a port configuration for the
                    agent
                  properties:
                    name:
                      description: Name is the name of the port
                      type: string
                    path:
                      description: Path is the path used for HTTP-based protocols
                      pattern: ^/[a-zA-Z0-9/_-]*$
                      type: string
                    port:
                      description: Port is the port number, defaults to the default
                        port for the protocol
                      format: int32
                      maximum: 65535
                      minimum: 1
                      type: integer
                    type:
                      description: Type of the protocol used by the agent
                      enum:
                      - A2A
                      - OpenAI
                      type: string
                  required:
                  - type
                  type: object
                type: array
              replicas:
                description: Replicas is the number of replicas for the microservice
                  deployment
                format: int32
                minimum: 0
                type: integer
              subAgents:
                description: |-
                  SubAgents defines configuration for connecting to remote agents.
                  This is converted to JSON and passed as SUB_AGENTS environment variable to the agent.
                items:
                  description: SubAgent defines configuration for connecting to a
                    remote agent
                  properties:
                    name:
                      description: Name is the unique identifier for this sub-agent
                      type: string
                    url:
                      description: |-
                        Url is the HTTP/HTTPS endpoint URL for the remote agent configuration.
                        Supports both HTTP (for internal cluster URLs) and HTTPS schemes.
                      format: uri
                      type: string
                  required:
                  - name
                  - url
                  type: object
                type: array
              tools:
                description: |-
                  Tools defines configuration for integrating MCP (Model Context Protocol) tools.
                  This is converted to JSON and passed as AGENT_TOOLS environment variable to the agent.
                items:
                  description: AgentTool defines configuration for integrating an
                    MCP (Model Context Protocol) tool
                  properties:
                    name:
                      description: Name is the unique identifier for this tool
                      type: string
                    url:
                      description: |-
                        Url is the HTTP/HTTPS endpoint URL for the MCP tool server.
                        Supports both HTTP (for internal cluster URLs) and HTTPS schemes.
                      format: uri
                      type: string
                  required:
                  - name
                  - url
                  type: object
                type: array
            type: object
          status:
            description: AgentStatus defines the observed state of Agent.
            properties:
              conditions:
                items:
                  description: Condition contains details for one aspect of the current
                    state of this API Resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

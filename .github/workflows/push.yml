name: Push
on:
  push:
    branches: [ main ]
    tags:
      - 'v*'

env:
  WORKLOAD_IDENTITY_PROVIDER: 'projects/363137235362/locations/global/workloadIdentityPools/github-actions-identity-pool/providers/github-actions-provider'
  SERVICE_ACCOUNT: 'sa-github-actions@agentic-layer.iam.gserviceaccount.com'

jobs:
  push:
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
      - name: 'Checkout'
        uses: 'actions/checkout@v5'
        with:
          fetch-depth: 0 # required to fetch all history for all branches and tags

      - name: 'Authenticate to Google Cloud'
        id: 'auth'
        uses: 'google-github-actions/auth@v3'
        with:
          workload_identity_provider: ${{ env.WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ env.SERVICE_ACCOUNT }}

      - name: 'Configure Docker for Artifact Registry'
        run: gcloud auth configure-docker eu.gcr.io

      - name: 'Generate Version Tag'
        id: 'generate_version'
        run: |
          if [[ "${{ github.ref_name }}" == "main" ]]; then
            GIT_BRANCH="${{ github.ref_name }}"
            GIT_SHA="${{ github.sha }}"
            VERSION="${GIT_BRANCH}-${GIT_SHA:0:7}-$(date +%s)"
          else
            VERSION=$(git describe --tags --always | sed 's/^v//')
          fi
          
          echo "Generated version: $VERSION"
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: 'Docker Build & Push'
        env:
          VERSION: ${{ steps.generate_version.outputs.version }}
        run: |
          make docker-buildx

      - name: 'Build Installer'
        if: github.ref_name != 'main'
        env:
          VERSION: ${{ steps.generate_version.outputs.version }}
        run: |
          make build-installer

      - name: 'Create Release'
        if: github.ref_name != 'main'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ github.ref_name }}
        run: |
          gh release create "$tag" \
              --repo="$GITHUB_REPOSITORY" \
              --title="${tag#v}" \
              --generate-notes \
              dist/install.yaml
